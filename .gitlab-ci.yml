stages:
  - preview

preview:
  stage: preview
  before_script:
    - |
      echo "Install dependencies"
      apk update && apk add bash && apk add --update coreutils
      pip install apprise && pip install awscli && pip install oauth2client && pip install gspread
    - |
      aws s3 ls ${WALG_S3_PREFIX}  #Check bucket is present
      export LAST_VALIDATION=$( aws s3 ls s3://embily-staging-core-backup/db_backups/validate_metadata/ | tail -n 1 ) || true #Check validation is present
      if [[ -z $LAST_VALIDATION ]]; then
        export DIFF_DAYS=1000
      else 
        CURRENT_DATE=$(date -d $(date +%Y%m%d) +%s)
        LAST_DATE_OF_VALIDATION=$(date -d $(echo $LAST_VALIDATION | awk '{print $1}') +%s)
        DIFF_TIME=$(( $CURRENT_DATE - $LAST_DATE_OF_VALIDATION ))
        export LAST_VALIDATION_FILE=$(echo $LAST_VALIDATION | awk '{print $4}')
        export DIFF_DAYS=$(( $DIFF_TIME/(60*60*24) ))
        echo $DIFF_DAYS
      fi
  script:
    - >
      if [[ $DIFF_DAYS -gt $INTERVAL_DAYS ]]; then 
        echo 'Start validation'
      else
        aws s3 cp ${WALG_S3_PREFIX}/test_metadata/$(aws s3 ls s3://embily-staging-core-backup/db_backups/test_metadata/ | tail -n 1 | awk '{print $4}') ./backup_report.json
        aws s3 cp ${WALG_S3_PREFIX}/validate_metadata/$(aws s3 ls s3://embily-staging-core-backup/db_backups/validate_metadata/ | tail -n 1 | awk '{print $4}') ./validate_report.json
        echo "No Validation"
      fi
  after_script:
    - >
      if [ $CI_JOB_STATUS == 'success' ]; then
        echo 'This will only run on success'
        ./sheets.py
      else
         echo 'apprise  -t "Achtung!Alarm!Внимание!Failed checkout POSTGESQL files" -b "$CI_JOB_URL" "${APPRISE}"'
      fi



    # - aws s3 cp ${WALG_S3_PREFIX}/test_metadata/$(aws s3 ls s3://embily-staging-core-backup/db_backups/test_metadata/ | tail -n 1 | awk '{print $4}') ./backup_report.json
    # - aws s3 cp ${WALG_S3_PREFIX}/validate_metadata/$(aws s3 ls s3://embily-staging-core-backup/db_backups/validate_metadata/ | tail -n 1 | awk '{print $4}') ./validate_report.json
    # - echo $credantionals_json > credantionals.json
    # - ls
    # - ./sheets.py


   # - aws s3 cp ${WALG_S3_PREFIX}/test_metadata/$(aws s3 ls s3://embily-staging-core-backup/db_backups/test_metadata/ | tail -n 1 | awk '{print $4}') ./backup_report.json