stages:
  - preview

preview:
  stage: preview
  before_script:
    - |
      echo "Install dependencies"
      apk update && apk add bash && apk add --update coreutils
      pip install apprise && pip install awscli && pip install oauth2client && pip install gspread
    - |
      aws s3 ls ${WALG_S3_PREFIX}  #Check bucket is present
      export LAST_VALIDATION=$( aws s3 ls s3://embily-staging-core-backup/db_backups/validate_metadata/ | tail -n 1 ) || true #Check validation is present
      if [[ -z $LAST_VALIDATION ]]; then
        export DIFF_DAYS=1000
      else 
        CURRENT_DATE=$(date -d $(date +%Y%m%d) +%s)
        LAST_DATE_OF_VALIDATION=$(date -d $(echo $LAST_VALIDATION | awk '{print $1}') +%s)
        DIFF_TIME=$(( $CURRENT_DATE - $LAST_DATE_OF_VALIDATION ))
        export LAST_VALIDATION_FILE=$(echo $LAST_VALIDATION | awk '{print $4}')
        export LAST_VALIDATION_RESULT=$(echo $LAST_VALIDATION | awk '{print $4}' | awk -F '-' '{print $3}')
        export DIFF_DAYS=$(( $DIFF_TIME/(60*60*24) ))
        echo $DIFF_DAYS
      fi
  script:
    - echo $credantionals_json > credantionals.json
    - >
      if [[ $DIFF_DAYS -gt $INTERVAL_DAYS ]] || [[ $LAST_VALIDATION_RESULT == 'FAILED' ]]; then 
        echo 'Start validation'
        export VALIDATED_BACKUP="some_validated_backup"
        printf '{"tested_backup": "%s", "last_validation": "%s", "result_of_validation": "SUCCESS"}' $VALIDATED_BACKUP $(date '+%Y-%m-%dT%H:%M:%S') > ./validate_report.json
        aws s3 cp validate_report.json ${WALG_S3_PREFIX}/validate_metadata/$(date '+%Y_%m_%d-%H_%M_%S')-SUCCESS
        aws s3 cp ${WALG_S3_PREFIX}/test_metadata/$(aws s3 ls ${WALG_S3_PREFIX}/test_metadata/ | tail -n 1 | awk '{print $4}') ./backup_report.json
        for SHEET in ${SHEETS//,/ }; do
          IFS=":" read -r SPREADSHEET_NAME SHEET_NAME port <<< "$SHEET"
          echo "Update sheets"
          ./update_sheets.py
        done
      else
        echo "No Validation"
        aws s3 cp ${WALG_S3_PREFIX}/test_metadata/$(aws s3 ls ${WALG_S3_PREFIX}/test_metadata/ | tail -n 1 | awk '{print $4}') ./backup_report.json
        aws s3 cp ${WALG_S3_PREFIX}/validate_metadata/$LAST_VALIDATION_FILE ./validate_report.json
        echo "No Validation"
        exit 1
        for SHEET in ${SHEETS//,/ }; do
          IFS=":" read -r SPREADSHEET_NAME SHEET_NAME port <<< "$SHEET"
          echo "Update sheets"
          ./update_sheets.py
        done
      fi
  after_script:
    - >
      if [ $CI_JOB_STATUS == 'success' ]; then
        echo 'This will only run on success'
      else
        echo 'apprise  -t "Achtung!Alarm!Внимание!Failed checkout POSTGESQL files" -b "$CI_JOB_URL" "${APPRISE}"'
        aws s3 cp ${WALG_S3_PREFIX}/validate_metadata/$( aws s3 ls s3://embily-staging-core-backup/db_backups/validate_metadata/ | grep "SUCCESS" | tail -n 1 | awk '{print $4}') ./old_validation.json
        OLD_VALIDATED_BACKUP=$(echo $(cat old_validation.json | awk -F ',' '{print $1}' | awk -F ':' '{print $2}') | sed -e 's/["'\'']//g')
        echo $OLD_VALIDATED_BACKUP
        printf '{"tested_backup": "%s", "last_validation": "%s", "result_of_validation": "FAILED"}' $OLD_VALIDATED_BACKUP $(date '+%Y-%m-%dT%H:%M:%S') > ./validate_report.json
        cat validate_report.json
        aws s3 cp validate_report.json ${WALG_S3_PREFIX}/validate_metadata/$(date '+%Y_%m_%d-%H_%M_%S')-FAILED
        aws s3 cp ${WALG_S3_PREFIX}/test_metadata/$(aws s3 ls ${WALG_S3_PREFIX}/test_metadata/ | tail -n 1 | awk '{print $4}') ./backup_report.json
        for SHEET in ${SHEETS//,/ }; do
          IFS=":" read -r SPREADSHEET_NAME SHEET_NAME port <<< "$SHEET"
          ./update_sheets.py
        done
      fi



    # - aws s3 cp ${WALG_S3_PREFIX}/test_metadata/$(aws s3 ls s3://embily-staging-core-backup/db_backups/test_metadata/ | tail -n 1 | awk '{print $4}') ./backup_report.json
    # - aws s3 cp ${WALG_S3_PREFIX}/validate_metadata/$(aws s3 ls s3://embily-staging-core-backup/db_backups/validate_metadata/ | tail -n 1 | awk '{print $4}') ./validate_report.json
    # - echo $credantionals_json > credantionals.json
    # - ls
    # - ./update_sheets.py


   # - aws s3 cp ${WALG_S3_PREFIX}/test_metadata/$(aws s3 ls s3://embily-staging-core-backup/db_backups/test_metadata/ | tail -n 1 | awk '{print $4}') ./backup_report.json